[buildout]
parts = base omelette test pre-commit pre-push sphinx-build-coverage
find-links =
    http://dist.enkidulan.tk/retrying-1.3.1enkidu.zip

develop = .


[base]
recipe = zc.recipe.egg:script
dependent-scripts = true
eggs =
    pylint
    hangout_api [tests]
    sphinx
    coverage
    pep8
    python-coveralls
    nosexcover
    coverage
interpreter = python

[omelette]
recipe = collective.recipe.omelette
eggs = ${base:eggs}

[test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    cd ${buildout:directory}
    bin/pep8 hangout_api &&
    bin/pylint hangout_api --ignore=tests --disable=duplicate-code &&
    bin/sphinx-build -b doctest docs/ build &&
    bin/nosetests hangout_api --no-skip --with-xcoverage --cover-package=hangout_api
output = ${buildout:directory}/bin/test
mode = 755

[pre-commit]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    cd ${buildout:directory}
    bin/pep8 hangout_api
    bin/pylint hangout_api --ignore=tests --disable=duplicate-code
output = ${buildout:directory}/.git/hooks/pre-commit
mode = 755

[pre-push]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ${buildout:directory}/bin/test
output = ${buildout:directory}/.git/hooks/pre-push
mode = 755

[sphinx-build-coverage]
recipe = collective.recipe.template
input = inline:
    #!${buildout:directory}/bin/python
    import sys
    import sphinx
    from coverage import coverage
    cov = coverage(
        source=['hangout_api'], omit=['*tests*', '*utils.py', '*__init__.py'])
    cov.start()
    try:
        sys.exit(sphinx.main())
    finally:
        cov.stop()
        cov.save()
        cov.html_report()
output = ${buildout:directory}/bin/sphinx-build-coverage
mode = 755
